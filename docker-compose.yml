version: "3.8"

services:
  anvil:
    image: mturcan1/foundry:latest
    container_name: anvil
    platform: linux/amd64
    volumes:
      - anvil-data:/data
    ports:
      - "8545:8545"
    entrypoint: anvil
    command: ["--block-time", "2", "--host", "0.0.0.0", "--state", "/data"]

  init:
    build: ./contracts
    container_name: init
    volumes:
      - shared:/app/shared
    depends_on:
      - anvil
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "test -f /app/contracts/shared/addresses.json && echo 'ok'",
        ]
      interval: 5s
      timeout: 10s
      retries: 5

  server:
    container_name: server
    build: ./server
    restart: always
    volumes:
      - shared:/app/shared
    environment:
      - ANVIL_URL=http://anvil:8545
      - MNEMONIC=test test test test test test test test test test test junk
      - PRECOMMIT_DELAY=20
      - DRAND_INTERVAL=3
      - DRAND_GENESIS=1677685200
      - DRAND_CHAIN_HASH=dbd506d6ef76e5f386f41c651dcb808c5bcbd75471cc4eafa3f4df7ad4e4c493
    healthcheck:
      test: ["CMD-SHELL", "pgrep -x ./main || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

    depends_on:
      anvil:
        condition: service_started
      init:
        condition: service_completed_successfully

  demo:
    container_name: demo
    build: ./demo
    restart: always
    volumes:
      - shared:/app/shared
    environment:
      - ANVIL_URL=http://anvil:8545
      - MNEMONIC=test test test test test test test test test test test junk
    depends_on:
      server:
        condition: service_healthy

  redis-db:
    extends:
      file: ./blockscout/services/redis.yml
      service: redis-db

  db-init:
    extends:
      file: ./blockscout/services/db.yml
      service: db-init

  db:
    depends_on:
      db-init:
        condition: service_completed_successfully
    extends:
      file: ./blockscout/services/db.yml
      service: db

  backend:
    depends_on:
      - db
      - redis-db
    extends:
      file: ./blockscout/services/backend.yml
      service: backend
    links:
      - db:database
    environment:
      ETHEREUM_JSONRPC_HTTP_URL: http://host.docker.internal:8545/
      ETHEREUM_JSONRPC_TRACE_URL: http://host.docker.internal:8545/
      ETHEREUM_JSONRPC_WS_URL: ws://host.docker.internal:8545/
      CHAIN_ID: "1337"

  visualizer:
    extends:
      file: ./blockscout/services/visualizer.yml
      service: visualizer

  sig-provider:
    extends:
      file: ./blockscout/services/sig-provider.yml
      service: sig-provider

  frontend:
    depends_on:
      backend:
        condition: service_started
      anvil:
        condition: service_started
      server:
        condition: service_started
    extends:
      file: ./blockscout/services/frontend.yml
      service: frontend

  stats-db-init:
    extends:
      file: ./blockscout/services/stats.yml
      service: stats-db-init

  stats-db:
    depends_on:
      stats-db-init:
        condition: service_completed_successfully
    extends:
      file: ./blockscout/services/stats.yml
      service: stats-db

  stats:
    depends_on:
      - stats-db
      - backend
    extends:
      file: ./blockscout/services/stats.yml
      service: stats

  user-ops-indexer:
    depends_on:
      - db
      - backend
    extends:
      file: ./blockscout/services/user-ops-indexer.yml
      service: user-ops-indexer

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    extends:
      file: ./blockscout/services/nginx.yml
      service: proxy

volumes:
  shared:
  blockscout-db-data:
  redis-data:
  stats-db-data:
  logs:
  anvil-data:
